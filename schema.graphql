type ProposalStrategy @entity(immutable: true) {
  id: String!
  name: String!
  version: String!
  proposal: String!
  eligibility: Eligibility!
  distribution: Distribution!
}

type Eligibility @entity(immutable: true) {
  id: String!
  type: String!
  choice: Int
}

type Distribution @entity(immutable: true) {
  id: String!
  type: String!
  limit: String
}

type Boost @entity {
  blockNumber: BigInt!
  id: String!
  chainId: String!
  strategyURI: String!
  token: Token!
  poolSize: String!
  currentBalance: String!
  guard: Bytes!
  start: String!
  end: String!
  owner: Bytes!
  strategy: ProposalStrategy
  transaction: Bytes!
  deposits: [Deposit!] @derivedFrom(field: "boost")
  claims: [Claim!] @derivedFrom(field: "boost")
}

type Proposal @entity {
  id: String!
  boosts: [Boost!]!
}

type Claim @entity {
  id: String!
  proposal: String
  boost: Boost!
  recipient: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes! 
}

type Deposit @entity(immutable: true) {
  id: String!
  boost: Boost!
  sender: Bytes!
  amount: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes! 
}

type Token @entity {
  id: String!
  name: String!
  symbol: String!
  decimals: String!
}
